#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 14 10:47:53 2017

@author: lamahamadeh
"""

#Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans
#-------------------------------------------------

#Read the dataframe
iris = load_iris()
X = iris.data
df = pd.DataFrame(X)
df.columns = iris ['feature_names']
df['target'] = iris ['target']
print(df.head())
#-------------------------------------------------

#Apply KMeans algorithm
kmeans_model = KMeans(n_clusters = 3, init = 'random', n_init = 60, max_iter = 400, random_state = 43)
kmeans_model.fit(X)
centroids = kmeans_model.cluster_centers_
KM_labels = kmeans_model.labels_ #tese are the labels generated from the KMeans clustering method
OR_labels = df.target #these are the original labels provided by the dataset
df['kMean predicted label'] = kmeans_model.labels_ #Here we add to the iris dataset a column that 
#contains the KMeans prediction labels in order to compare between the target column and the kmean clustering perdication
print (df.head())
#-------------------------------------------------

#Plotting and visulisation

#Scatter plot of the original labels provided by the dataset: OR_labels
colormap=np.array(['Green', 'Blue', 'Red'])
fig = plt.figure()
plt.subplot(4, 3, 1)
plt.scatter(df['sepal length (cm)'], y=df['sepal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 2)
plt.scatter(df['sepal length (cm)'], y=df['petal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('petal length (cm)')
plt.title('Iris Data Clusters Before Applying KMeans Method',fontsize=16)

plt.subplot(4, 3, 3)
plt.scatter(df['sepal length (cm)'], y=df['petal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 4)
plt.scatter(df['sepal width (cm)'], y=df['sepal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 5)
plt.scatter(df['sepal width (cm)'], y=df['petal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('petal length (cm)')

plt.subplot(4, 3, 6)
plt.scatter(df['sepal width (cm)'], y=df['petal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 7)
plt.scatter(df['petal length (cm)'], y=df['sepal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 8)
plt.scatter(df['petal length (cm)'], y=df['sepal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 9)
plt.scatter(df['petal length (cm)'], y=df['petal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 10)
plt.scatter(df['petal width (cm)'], y=df['sepal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 11)
plt.scatter(df['petal width (cm)'], y=df['sepal width (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 12)
plt.scatter(df['petal width (cm)'], y=df['petal length (cm)'], c=colormap[OR_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('petal length (cm)')

#Scatter plots of the labels generated by KMeans clustering method: KM_labels
fig = plt.figure()
plt.subplot(4, 3, 1)
plt.scatter(df['sepal length (cm)'], y=df['sepal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 2)
plt.scatter(df['sepal length (cm)'], y=df['petal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('petal length (cm)')
plt.title('Iris Data Clusters After Applying KMeans Method',fontsize=16)

plt.subplot(4, 3, 3)
plt.scatter(df['sepal length (cm)'], y=df['petal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal length (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 4)
plt.scatter(df['sepal width (cm)'], y=df['sepal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 5)
plt.scatter(df['sepal width (cm)'], y=df['petal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('petal length (cm)')

plt.subplot(4, 3, 6)
plt.scatter(df['sepal width (cm)'], y=df['petal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('sepal width (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 7)
plt.scatter(df['petal length (cm)'], y=df['sepal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 8)
plt.scatter(df['petal length (cm)'], y=df['sepal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 9)
plt.scatter(df['petal length (cm)'], y=df['petal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal length (cm)')
plt.ylabel('petal width (cm)')

plt.subplot(4, 3, 10)
plt.scatter(df['petal width (cm)'], y=df['sepal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('sepal length (cm)')

plt.subplot(4, 3, 11)
plt.scatter(df['petal width (cm)'], y=df['sepal width (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('sepal width (cm)')

plt.subplot(4, 3, 12)
plt.scatter(df['petal width (cm)'], y=df['petal length (cm)'], c=colormap[KM_labels], s=40)
plt.xlabel('petal width (cm)')
plt.ylabel('petal length (cm)')

#Plotting the distribution of the vlaues for each feature
plt.figure()
plt.subplot(2,2,1)
plt.hist(df['sepal length (cm)'],color = '#43E5C9')
plt.title('sepal length (cm)')

plt.subplot(2,2,2)
plt.hist(df['sepal width (cm)'],color = '#43E5C9')
plt.title('sepal width (cm)')

plt.subplot(2,2,3)
plt.hist(df['petal length (cm)'],color = '#43E5C9')
plt.title('petal length (cm)')

plt.subplot(2,2,4)
plt.hist(df['petal width (cm)'],color = '#43E5C9')
plt.title('petal width (cm)')

plt.show()

#It is worth mentioning that the labels might change colour/numeric value between
#the original and KMeans labels, but the idea here is to see if the clustering 
#methos of KMeans produces the same groups as the original lables. 
#-------------------------------------------------


